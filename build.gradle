plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'war' // WAR 플러그인 추가
}

group = 'company.space'

//jar {
//	archiveBaseName = 'recode' // JAR 파일 이름
//}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	providedRuntime // 추가: providedRuntime 구성을 명시적으로 선언
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Boot 기본 웹 기능
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 내장 톰캣 제외
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	//db연동 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	// Hibernate Validator
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// BeanValidator
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'


	//JWT이용 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	//security 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 공통라이브러리
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// 테스트 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Email인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

bootJar {
	enabled = false // JAR 파일 생성 비활성화
}

war {
	enabled = true // WAR 파일 생성 활성화
}

tasks.named('test') {
	useJUnitPlatform()
}
